{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","services/imagesAPI.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","Modal","document","querySelector","handleBackdrop","code","props","onClose","hideBackdrop","console","log","currentTarget","window","addEventListener","this","removeEventListener","src","alt","onClick","Component","ImageGalleryItem","largeImg","showModal","setShowModal","toggleModal","ImageGallery","images","map","id","webformatURL","largeImageURL","tags","Button","OnLoader","color","height","width","timeout","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","currentPage","searchQuery","get","then","res","data","hits","App","setImages","setCurrentPage","setSearchQuery","isLoading","setIsLoading","setError","useEffect","imagesAPI","prevState","catch","error","message","finally","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f77eb954.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Searchbar.css';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onChangeInput = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmitForm}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={onChangeInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import { createPortal } from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport './Modal.css';\r\nconst rootModal = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleBackdrop);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleBackdrop);\r\n  }\r\n\r\n  handleBackdrop = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  hideBackdrop = e => {\r\n    console.log(e.currentTarget);\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.hideBackdrop}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport './ImageGalleryItem.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ImageGalleryItem = ({ src, largeImg, alt }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    return setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={toggleModal}\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n      {showModal && <Modal onClose={toggleModal} src={largeImg} alt={alt} />}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import './ImageGallery.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nconst ImageGallery = ({ images }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n          <ImageGalleryItem\r\n            src={webformatURL}\r\n            alt={tags}\r\n            largeImg={largeImageURL}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import './Button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div>\r\n      <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\nimport React, { useState } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nconst OnLoader = () => {\r\n  //other logic {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n};\r\n\r\nexport default OnLoader;\r\n","import axios from 'axios';\r\nconst keyApi = '18984105-6f1a9ca3b34d6e222fa727017';\r\nconst basicURL = 'https://pixabay.com/api/';\r\n\r\naxios.defaults.baseURL = basicURL;\r\naxios.defaults.params = {\r\n  key: keyApi,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nconst fetchImages = ({ currentPage = 1, searchQuery = '' }) => {\r\n  return axios\r\n    .get('', { params: { currentPage, searchQuery } })\r\n    .then(res => res.data.hits);\r\n};\r\n\r\nexport default fetchImages;\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport OnLoader from './components/Loader/Loader';\nimport imagesAPI from './services/imagesAPI';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    const fetchImages = () => {\n      setIsLoading(true);\n\n      imagesAPI({ currentPage, setSearchQuery: searchQuery })\n        .then(res => {\n          setImages(prevState => [...prevState, ...res]);\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setIsLoading(false));\n    };\n    fetchImages();\n  }, [currentPage, searchQuery]);\n\n  const updatePage = () => {\n    setCurrentPage(prevState => prevState + 1);\n  };\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery images={images} />\n      {images.length > 0 && !isLoading && <Button onClick={updatePage} />}\n\n      {isLoading && <OnLoader />}\n    </>\n  );\n};\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.fetchImages();\n//     }\n\n//     this.state.currentPage > 1 && this.scroll();\n//   }\n\n//   fetchImages = () => {\n//     this.setState({ isLoading: true });\n//     const { currentPage, searchQuery } = this.state;\n//     const options = {\n//       currentPage,\n//       searchQuery,\n//     };\n//     imagesAPI\n//       .fetchImages(options)\n//       .then(hits => {\n//         this.setState(prevState => ({\n//           images: [...prevState.images, ...hits],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//       })\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   scroll() {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   }\n\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}